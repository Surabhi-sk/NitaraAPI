package com.nitara.base;


import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import org.json.JSONObject;
import org.junit.Rule;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;

import com.nitara.Reports.Report;

import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class GenericBase {

	public String token;

	public static Properties prop;

	@Rule
	public Report screenShootRule = new Report();

	public GenericBase()
	{
		try 
		{
			prop=new Properties();
			FileInputStream fis=new FileInputStream("src\\main\\java\\com\\nitara\\config\\Config.properties");
			prop.load(fis);
		}
		catch(FileNotFoundException e)
		{
			e.printStackTrace();
		}
		catch(IOException e)
		{
			e.printStackTrace();
		}
	}


//	@BeforeMethod(alwaysRun = true)
	public void getUserAuthenticationToken() {

		// Assigning base Url to the request
		RestAssured.baseURI = prop.getProperty("baseurl");
		String abstractname = prop.getProperty("UserLoginV2");
		
		RequestSpecification request = RestAssured.given();
		JSONObject requestParams = new JSONObject();
		requestParams.put("countryCode", "+91"); // Cast
		requestParams.put("phone", "2056732160");
		requestParams.put("Password", "password");
		requestParams.put("deviceName", "DELL_PC"); 		 
		requestParams.put("deviceType",  "LAPTOP");
		requestParams.put("key",  "frmkey");

		request.body(requestParams.toString());

		request.header("Content-Type", "application/json");

		Response response = request.post(abstractname);

		int  statusCode = response.getStatusCode();

		System.out.println("The status code recieved: " + statusCode);

		System.out.println("Response body: " + response.body().prettyPeek().asString());


		String jsonString = response.asString();
		String  message = JsonPath.from(jsonString).get("message");
		//Validate success message
		Assert.assertEquals("Logged in successfully.", message);

		token = JsonPath.from(jsonString).get("token");


	}

}
